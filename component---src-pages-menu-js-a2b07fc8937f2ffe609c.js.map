{"version":3,"file":"component---src-pages-menu-js-a2b07fc8937f2ffe609c.js","mappings":"+MAGA,MAAMA,EAAWC,EAAQ,MACnBC,EAAUC,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,iHAOpBC,EAAeD,EAAAA,QAAAA,IAAAA,WAAU,yEAAVA,CAAU,gHAWzBE,EAAQF,EAAAA,QAAAA,GAAAA,WAAS,kEAATA,CAAS,yFAMjBG,EAAWH,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,kIAQrBI,EAAWJ,EAAAA,QAAAA,EAAAA,WAAQ,qEAARA,CAAQ,wEAKV,SAASK,EAAgBC,GACtC,OACE,gBAACP,EAAO,KACN,gBAACE,EAAY,KAAEK,EAAMC,OACrB,gBAACJ,EAAQ,CAACK,UAAU,eAClB,gBAACN,EAAK,CAACM,UAAU,cAAcF,EAAMG,MAAK,KAC1C,gBAACL,EAAQ,CAACI,UAAU,aAAaF,EAAMI,UACvC,qBACEC,OAAO,SACPC,KAAMf,EAASgB,cAAc,iBAAiBP,EAAMQ,SAAQ,UAE5D,gBAAC,IAAM,yBAKjB,C,sDCzDO,MAAMC,EACX,8D,gHCCK,MAAMC,EAAYhB,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,6VA6BtBiB,EAAcjB,EAAAA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,iO,sBCvBrC,MAAMD,EAAUC,EAAAA,QAAAA,IAAAA,WAAU,yDAAVA,CAAU,6MAYX,SAASkB,EAAKZ,GAC3B,MAAM,EAACa,EAAM,EAACC,IAAWC,EAAAA,EAAAA,UAAS,KAC5B,EAACC,EAAc,EAACC,IAAoBF,EAAAA,EAAAA,UAAS,IASnD,OARAG,EAAAA,EAAAA,YAAU,KACRC,MAAMV,EAAAA,GACHW,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACLT,EAAQS,EAAKC,QAAQ,GACrB,GACH,IAGD,gBAACC,EAAA,EAAY,KACX,gBAAChC,EAAO,CAACS,UAAU,IACjB,gBAACQ,EAAS,KAER,yBACEgB,QAAS,YACTC,QAAS,KACPV,EAAiBJ,EAAM,GAGzB,yBACEe,gBAAc,EACdC,KAAK,WACLC,GAAI,YACJC,KAAK,UAGP,wBAAM7B,UAAU,IAAE,UAGpB,yBACEwB,QAAS,YACTC,QAAS,KACPV,EACEJ,EAAMmB,QAAQC,IACZ,GAAqB,YAAjBA,EAAKC,UAA2C,OAAjBD,EAAKC,SACtC,OAAOD,CAAI,IAEhB,GAGH,yBAAOJ,KAAK,WAAWC,GAAI,YAAaC,KAAK,UAC7C,wBAAM7B,UAAU,IAAE,cAGpB,yBACEwB,QAAS,eACTC,QAAS,KACPV,EACEJ,EAAMmB,QAAQC,IACZ,GAAqB,UAAjBA,EAAKC,SAAsB,OAAOD,CAAI,IAE7C,GAGH,yBAAOJ,KAAK,WAAWC,GAAI,eAAgBC,KAAK,UAChD,wBAAM7B,UAAU,IAAE,oBAGpB,yBACEwB,QAAS,cACTC,QAAS,KACPV,EACEJ,EAAMmB,QAAQC,IACZ,GAAqB,SAAjBA,EAAKC,SAAqB,OAAOD,CAAI,IAE5C,GAGH,yBAAOJ,KAAK,WAAWC,GAAI,cAAeC,KAAK,UAC/C,wBAAM7B,UAAU,IAAE,YAGpB,yBACEwB,QAAS,mBACTC,QAAS,KACPV,EACEJ,EAAMmB,QAAQC,IACZ,GAAqB,eAAjBA,EAAKC,SAA2B,OAAOD,CAAI,IAElD,GAGH,yBAAOJ,KAAK,WAAWC,GAAI,mBAAoBC,KAAK,UACpD,wBAAM7B,UAAU,IAAE,gBAGpB,yBACEwB,QAAS,gBACTC,QAAS,KACPV,EACEJ,EAAMmB,QAAQC,IACZ,GAAqB,WAAjBA,EAAKC,SAAuB,OAAOD,CAAI,IAE9C,GAGH,yBAAOJ,KAAK,WAAWC,GAAI,gBAAiBC,KAAK,UACjD,wBAAM7B,UAAU,IAAE,aAGtB,gBAACS,EAAW,CAACT,UAAU,gCACAiC,MAApBnB,EAAc,GACXH,EAAMuB,KAAI,CAACC,EAASP,IAEhB,gBAAC/B,EAAA,EAAe,CACduC,IAAKR,EACL7B,MACE,gBAACsC,EAAA,EAAa,CAACC,UAAWH,EAAQpC,QAEpCE,MAAOkC,EAAQR,KACfzB,SAAUiC,EAAQI,gBAIxBzB,EAAcoB,KAAI,CAACC,EAASP,IAExB,gBAAC/B,EAAA,EAAe,CACduC,IAAKR,EACL7B,MACE,gBAACsC,EAAA,EAAa,CAACC,UAAWH,EAAQpC,QAEpCE,MAAOkC,EAAQR,KACfzB,SAAUiC,EAAQI,kBAQtC,C","sources":["webpack://gatsby-starter-hello-world/./src/component/CardMenuAlacart.js","webpack://gatsby-starter-hello-world/./src/constant.js","webpack://gatsby-starter-hello-world/./src/layout/MenuComponents.js","webpack://gatsby-starter-hello-world/./src/pages/menu.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nconst dataInfo = require(\"../../data/dataInfo\");\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 26.5rem;\r\n  min-height: 41rem;\r\n  border: none;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n`;\r\nconst ImageWrapper = styled.div`\r\n  height: 200px;\r\n  overflow: hidden;\r\n  .gatsby-image-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    object-fit: cover;\r\n    display: block;\r\n  }\r\n`;\r\nconst Title = styled.h5`\r\n  font-weight: 700;\r\n  color: var(--text-second-color);\r\n  font-size: 2.4rem;\r\n  margin-bottom: 10px;\r\n`;\r\nconst CardBody = styled.div`\r\n  padding: 20px;\r\n  padding-bottom: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: space-between;\r\n  flex-direction: column;\r\n`;\r\nconst CardText = styled.p`\r\n  font-size: 1.4rem;\r\n  padding-bottom: 20px;\r\n  color: var(--text-dark-color);\r\n`;\r\nexport default function CardMenuAlacart(props) {\r\n  return (\r\n    <Wrapper>\r\n      <ImageWrapper>{props.image}</ImageWrapper>\r\n      <CardBody className=\"text-center\">\r\n        <Title className=\"card-title\">{props.title} </Title>\r\n        <CardText className=\"card-text\">{props.bodyText}</CardText>\r\n        <a\r\n          target=\"_blank\"\r\n          href={dataInfo.whatsapp_link(`aku mau pesan ${props.menuName} dong`)}\r\n        >\r\n          <Button>Pesan Sekarang</Button>\r\n        </a>\r\n      </CardBody>\r\n    </Wrapper>\r\n  );\r\n}\r\n","export const MENU_API =\r\n  \"https://idpan.github.io/menu-mbok-katini/menuMbokKatini.json\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nexport const NavFilter = styled.div`\r\n  width: 100%;\r\n  max-width: 53rem;\r\n  overflow: scroll;\r\n\r\n  margin: auto;\r\n  padding: 30px 20px 0;\r\n  display: flex;\r\n  gap: 20px;\r\n  input:checked + span {\r\n    color: var(--text-main-color);\r\n  }\r\n  input {\r\n    display: none;\r\n  }\r\n  label {\r\n    white-space: nowrap;\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    overflow: visible;\r\n    justify-content: center;\r\n    label {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const MenuWrapper = styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 100px;\r\n  overflow: hidden;\r\n  justify-content: center;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 300px);\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-row-gap: 60px;\r\n  grid-column-gap: 20px;\r\n`;\r\nexport const NavFilterTag = (props) => {\r\n  <label htmlFor={props.label + \"-radio\"}>\r\n    <input\r\n      data-category={props.label}\r\n      name=\"category\"\r\n      id={props.label + \"-radio\"}\r\n      type=\"radio\"\r\n    />\r\n    <span className=\"\">children</span>\r\n  </label>;\r\n};\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CardMenuAlacart from \"../component/CardMenuAlacart\";\r\nimport PageTemplate from \"../layout/PageTemplate\";\r\nimport { NavFilter, MenuWrapper } from \"../layout/MenuComponents\";\r\nimport { MENU_API } from \"../constant\";\r\nimport OptimizeImage from \"../component/OptimizeImage\";\r\nconst Wrapper = styled.div`\r\n  padding-top: 50px;\r\n  .menu-container {\r\n    justify-content: center;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 300px);\r\n    justify-content: center;\r\n    justify-items: center;\r\n    grid-row-gap: 60px;\r\n    grid-column-gap: 20px;\r\n  }\r\n`;\r\nexport default function Menu(props) {\r\n  const [menus, setMenu] = useState([]);\r\n  const [displayedMenu, setDisplayedMenu] = useState([]);\r\n  useEffect(() => {\r\n    fetch(MENU_API)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMenu(data.alacart);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate>\r\n      <Wrapper className=\"\">\r\n        <NavFilter>\r\n          {/* all label */}\r\n          <label\r\n            htmlFor={\"all-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(menus);\r\n            }}\r\n          >\r\n            <input\r\n              defaultChecked\r\n              name=\"category\"\r\n              id={\"all-radio\"}\r\n              type=\"radio\"\r\n            />\r\n\r\n            <span className=\"\">Semua</span>\r\n          </label>\r\n          {/* mie label */}\r\n          <label\r\n            htmlFor={\"mie-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(\r\n                menus.filter((menu) => {\r\n                  if (menu.category == \"mie-ayam\" || menu.category == \"mie\")\r\n                    return menu;\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <input name=\"category\" id={\"mie-radio\"} type=\"radio\" />\r\n            <span className=\"\">Aneka Mie</span>\r\n          </label>\r\n          {/* goreng label */}\r\n          <label\r\n            htmlFor={\"goreng-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(\r\n                menus.filter((menu) => {\r\n                  if (menu.category == \"goreng\") return menu;\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <input name=\"category\" id={\"goreng-radio\"} type=\"radio\" />\r\n            <span className=\"\">Goreng - goreng</span>\r\n          </label>\r\n          {/* bakaran label */}\r\n          <label\r\n            htmlFor={\"bakar-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(\r\n                menus.filter((menu) => {\r\n                  if (menu.category == \"bakar\") return menu;\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <input name=\"category\" id={\"bakar-radio\"} type=\"radio\" />\r\n            <span className=\"\">Bakaran</span>\r\n          </label>\r\n          {/* nasi goreng label */}\r\n          <label\r\n            htmlFor={\"nasiGoreng-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(\r\n                menus.filter((menu) => {\r\n                  if (menu.category == \"nasi-goreng\") return menu;\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <input name=\"category\" id={\"nasiGoreng-radio\"} type=\"radio\" />\r\n            <span className=\"\">Nasi Goreng</span>\r\n          </label>\r\n          {/* minuuman label */}\r\n          <label\r\n            htmlFor={\"minuman-radio\"}\r\n            onClick={() => {\r\n              setDisplayedMenu(\r\n                menus.filter((menu) => {\r\n                  if (menu.category == \"minuman\") return menu;\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <input name=\"category\" id={\"minuman-radio\"} type=\"radio\" />\r\n            <span className=\"\">Minuman</span>\r\n          </label>\r\n        </NavFilter>\r\n        <MenuWrapper className=\" menu-container my-container\">\r\n          {displayedMenu[0] == undefined\r\n            ? menus.map((element, id) => {\r\n                return (\r\n                  <CardMenuAlacart\r\n                    key={id}\r\n                    image={\r\n                      <OptimizeImage imageName={element.image}></OptimizeImage>\r\n                    }\r\n                    title={element.name}\r\n                    bodyText={element.description}\r\n                  />\r\n                );\r\n              })\r\n            : displayedMenu.map((element, id) => {\r\n                return (\r\n                  <CardMenuAlacart\r\n                    key={id}\r\n                    image={\r\n                      <OptimizeImage imageName={element.image}></OptimizeImage>\r\n                    }\r\n                    title={element.name}\r\n                    bodyText={element.description}\r\n                  />\r\n                );\r\n              })}\r\n        </MenuWrapper>\r\n      </Wrapper>\r\n    </PageTemplate>\r\n  );\r\n}\r\n"],"names":["dataInfo","require","Wrapper","styled","ImageWrapper","Title","CardBody","CardText","CardMenuAlacart","props","image","className","title","bodyText","target","href","whatsapp_link","menuName","MENU_API","NavFilter","MenuWrapper","Menu","menus","setMenu","useState","displayedMenu","setDisplayedMenu","useEffect","fetch","then","res","json","data","alacart","PageTemplate","htmlFor","onClick","defaultChecked","name","id","type","filter","menu","category","undefined","map","element","key","OptimizeImage","imageName","description"],"sourceRoot":""}